{"version":3,"sources":["Table.js","Form.js","Api.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","this","for","type","id","onChange","Component","Api","data","fetch","then","result","json","entry","ReactDOM","render","document","getElementById"],"mappings":"qQAEMA,EAAc,WAChB,OACI,+BACA,4BACE,oCACA,sCAMJC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,GACtC,OACI,wBAAIC,IAAMD,GACN,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAU,kBAAMT,EAAMU,gBAAgBL,KAA9C,eAKd,OAAO,+BAAQJ,IAcJU,EAXD,SAACX,GAAW,IAChBE,EAAmCF,EAAnCE,cAAeQ,EAAoBV,EAApBU,gBACvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAmBA,M,OCoBnDE,E,YAlDX,WAAaZ,GAAQ,IAAD,8BAChB,4CAAMA,KAUVa,aAAe,SAAAC,GAAU,IAAD,EACIA,EAAMC,OAAtBR,EADY,EACZA,KAAMS,EADM,EACNA,MAEd,EAAKC,SAAL,eACKV,EAAOS,KAfI,EAmBpBE,WAAa,WACT,EAAKlB,MAAMmB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAChBd,KAAM,GACNC,IAAK,IAGT,EAAKY,MAAQ,EAAKC,aARF,E,sEAwBX,IAAD,EACkBC,KAAKF,MAAnBb,EADJ,EACIA,KAAMC,EADV,EACUA,IAEd,OACI,8BACI,2BAAOe,IAAI,QAAX,QACA,2BACIC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHT,MAAOT,EACPmB,SAAUJ,KAAKT,eACnB,2BAAOU,IAAI,OAAX,OACA,2BACIC,KAAO,OACPjB,KAAO,MACPkB,GAAK,MACLT,MAAQR,EACRkB,SAAYJ,KAAKT,eACrB,2BAAOW,KAAK,SAASR,MAAM,SAASP,QAASa,KAAKJ,kB,GA5C/CS,aC8BJC,GC5BGD,Y,iNDDhBP,MAAQ,CACNS,KAAM,I,mFAIa,IAAD,OAIlBC,MAFE,kGAGCC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GACJ,EAAKf,SAAS,CACZY,KAAMG,S,+BAKJ,IAGFA,EAFWV,KAAKF,MAAdS,KAEY1B,KAAI,SAAC+B,EAAO7B,GAC9B,OAAO,wBAAIC,IAAKD,GAAQ6B,MAG1B,OAAO,4BAAKF,O,GA1BEL,cEMlBQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5070fbc4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Job</th>\r\n        </tr>\r\n      </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = props => {\r\n    const rows = props.characterData.map((row,index) =>{\r\n        return (\r\n            <tr key= {index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                  <button onClick ={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }) \r\n    return <tbody>{rows}</tbody>\r\n} \r\n\r\nconst Table = (props) => {\r\n  const { characterData, removeCharacter } = props\r\n  return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody characterData={characterData} removeCharacter = {removeCharacter} />\r\n    </table>\r\n  );\r\n}\r\n\r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n\r\n        this.initialState = {\r\n            name: '',\r\n            job: '',\r\n        }\r\n\r\n        this.state = this.initialState\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render(){\r\n        const { name, job } = this.state\r\n\r\n        return(\r\n            <form>\r\n                <label for=\"name\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label for=\"job\">Job</label>\r\n                <input\r\n                    type = 'text'\r\n                    name = 'job'\r\n                    id = 'job'\r\n                    value= {job}\r\n                    onChange = {this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Form","import React, { Component } from 'react'\r\n\r\nclass Api extends Component {\r\n  state = {\r\n    data: [],\r\n  }\r\n\r\n  // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n  componentDidMount() {\r\n    const url =\r\n      'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\r\n\r\n    fetch(url)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState({\r\n          data: result,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state\r\n\r\n    const result = data.map((entry, index) => {\r\n      return <li key={index}>{entry}</li>\r\n    })\r\n\r\n    return <ul>{result}</ul>\r\n  }\r\n}\r\n\r\nexport default Api","import React,{ Component } from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        characters: [ ]\r\n    }\r\n\r\n    removeCharacter = index => {\r\n        const { characters } = this.state\r\n\r\n        this.setState({\r\n            characters: characters.filter((character,i) =>{\r\n                return i !== index\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = character => {\r\n        this.setState({characters: [...this.state.characters, character]})\r\n    }\r\n\r\n    render(){\r\n        const {characters} = this.state\r\n\r\n        return(\r\n        <div className = 'Container'>\r\n            <Table characterData ={characters} removeCharacter = {this.removeCharacter}/>\r\n            <Form handleSubmit = {this.handleSubmit} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport Api from './Api'\n\n\n//ReactDOM.render(<App />, document.getElementById('root'))\nReactDOM.render(<Api />, document.getElementById('root'))"],"sourceRoot":""}